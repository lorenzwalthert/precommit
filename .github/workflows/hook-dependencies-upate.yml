on:
  schedule:
    - cron:  '50 08 18 * *'

name: Hook dependency updates

jobs:
  hook-dependencies-update:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
      
      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            renv-
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages('remotes'); remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
      - name: update existing packages
        run: |
          options(repos = c(CRAN = "https://packagemanager.rstudio.com/all/latest"))
          install.packages('renv')
          install.packages('jsonlite')
          renv_deps <- names(jsonlite::read_json('renv.lock')$Packages)
          renv::load()
          renv::restore()
          can_be_updated <- renv::update(renv_deps, prompt = FALSE)
          renv::snapshot(packages = renv_deps)
        shell: Rscript {0}
      - name: update dependency graph among packages
        run: |
          # also see corresponding files to update
          hook_deps <- function(root) {
            out <- renv::dependencies("inst/hooks/exported/")$Package
            desc <- desc::desc()
            deps <- desc$get_deps()
            dont <- c(
              "yaml", "usethis", "withr", "rstudioapi", "precommit",
              "httr" # lintr -> httr  -> curl -> libcurl, but seems to give no erorr on
              # loading lintr, plus https://github.com/jimhester/lintr/issues/861
            )
            out <- c(out, "roxygen2", "spelling", "styler", "pkgload", "lintr", "knitr", "git2r", "desc")
            out <- setdiff(c(unique(c(out, deps[deps$type == "Imports", ]$package))), dont)
            out <- names(renv:::renv_package_dependencies(out))
            return(out)
          }
          options(repos = c(CRAN = "https://packagemanager.rstudio.com/all/latest"))
          options(renv.snapshot.filter = hook_deps)
          
          renv::snapshot(type = "custom", prompt = FALSE)
          # or renv::snapshot(packages = hook_deps(), prompt = FALSE)
        shell: Rscript {0}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3.9.1
        with:
          commit-message: Update renv dependencies
          branch: hook-dependencies-update
          delete-branch: true
          assignees: lorenzwalthert
          title: 'Hook dependencies update'
          body: |
            This PR updates the hook dependencies in `renv.lock`, auto-generated by [create-pull-request][1]. Close and re-open this to trigger `on: pull_request` events to circumvent [limitation of GitHub actions](https://github.com/peter-evans/create-pull-request/blob/master/docs/concepts-guidelines.md#push-pull-request-branches-to-a-fork).

            [1]: https://github.com/peter-evans/create-pull-request
            
            
